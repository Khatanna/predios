type Subscription {
  userPermissionStatusUpdated: [String]
}

type OnConnection {
  username: String
  connection: String
}

type OnCursorMove {
  contextId: String
  username: String
  positionX: Int
  positionY: Int
}

type OnFocusInput {
  contextId: String
  name: String
  isFocused: Boolean
  username: String
}

type OnChangeInput {
  name: String
  value: String
}

type OnChangeProperty {
  fieldName: String
  to: User
  from: User
  property: Property
}

type Subscription {
  userConnected: OnConnection
  cursorMove: [OnCursorMove]
  focusedInput: OnFocusInput
  changeInput: OnChangeInput
  propertyChange(username: String): OnChangeProperty
}

type Mutation {
  cursorMove(
    contextId: String
    username: String
    positionX: Int
    positionY: Int
  ): String
  focusInput(contextId: String, name: String, isFocused: Boolean): String
  changeInput(name: String, value: String): String
}
