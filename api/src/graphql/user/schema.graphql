# Types
type User {
  id: ID!
  names: String!
  firstLastName: String!
  secondLastName: String!
  username: String!
  password: String!
  permissions: [Permission!]!
  createdAt: String!
  updatedAt: String!
  type: UserType
  status: String!
}

type UserCreate {
  created: Boolean
  user: User
}

type UserDelete {
  deleted: Boolean
  user: User
}

type UserUpdate {
  updated: Boolean
  user: User
}

# Queries
type Query {
  allUsers: [User!]!
  getUserById(id: ID): User
  getUserByUsername(username: String): User
}

# Mutations
type Mutation {
  createUser(data: ForCreateUser): UserCreate
  updateUserByUsername(data: ForUpdateUserByUsername): UserUpdate
  updateUserById(data: ForUpdateUserById): UserUpdate
  deleteUserById(id: ID): UserDelete
  deleteUserByUsername(username: String): UserDelete
}

# Input types
input ForCreateUser {
  names: String!
  firstLastName: String!
  secondLastName: String!
  username: String!
  password: String!
  type: ForCreateTypeUser!
}

input ForUpdateUser {
  names: String
  firstLastName: String
  secondLastName: String
  username: String
  password: String
  type: ForCreateTypeUser
  status: String
}

input ForUpdateUserById {
  id: ID!
  data: ForUpdateUser
}

input ForUpdateUserByUsername {
  username: String!
  data: ForUpdateUser
}
