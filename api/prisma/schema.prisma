generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(uuid())
  name           String?      @map("nombre") @db.VarChar(30)
  firstLastName  String?      @map("apellido_paterno") @db.VarChar(50)
  secondLastName String?      @map("apellido_materno") @db.VarChar(50)
  username       String       @unique @map("nombre_de_usuario") @db.VarChar(20)
  password       String       @map("contrase√±a") @db.MediumText
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  session        Session?
  permiso        Permission[] @relation("permissiontouser")

  @@map("usuario")
}

model Session {
  id        String   @id @default(uuid())
  token     String   @db.MediumText
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], map: "sesion")

  @@map("sesion")
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique @map("nombre")
  description String   @map("descripcion")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  usuario     User[]   @relation("permissiontouser")

  @@map("permiso")
}

model Property {
  id                   Int              @id @default(autoincrement())
  name                 String           @map("nombre") @db.MediumText
  beneficiary          String           @map("beneficiario")
  area                 Decimal          @map("superficie")
  expertiseOfArea      Decimal          @map("superficie_de_pericia")
  observation          String           @map("observacion") @db.MediumText
  technicalObservation String           @map("observacion_tecnica") @db.MediumText
  plots                Int              @map("parcelas")
  bodies               Int              @map("cuerpos")
  sheets               Int              @map("fojas")
  code                 String           @map("codigo") @db.VarChar(128)
  codeOfSearch         String           @map("codigo_de_busqueda") @db.VarChar(128)
  reference            String           @map("referencia")
  agrupacionIdentifier String           @map("id_de_agrupacion_social") @db.VarChar(64)
  secondState          String           @map("estado_2") @db.VarChar(128)
  polygone             String           @map("poligono") @db.VarChar(32)
  activity             Activity?
  clasification        Clasification?
  state                State?
  groupedState         GroupedState?
  legal                Legal?
  localization         localization?
  subDirectory         SubDirectory?
  technical            Technical?
  type                 Type?
  responsibleUnit      ResponsibleUnit?

  @@map("predio")
}

model State {
  id          Int      @id @default(autoincrement())
  description String   @map("descripcion") @db.LongText
  order       String   @map("orden") @db.VarChar(16)
  propertyId  Int      @unique
  property    Property @relation(fields: [propertyId], references: [id])
  stage       Stage?

  @@map("estado")
}

model Stage {
  id      Int    @id @default(autoincrement())
  name    String @unique @map("nombre") @db.VarChar(32)
  stateId Int    @unique
  state   State  @relation(fields: [stateId], references: [id])

  @@map("etapa")
}

model SubDirectory {
  id         Int      @id @default(autoincrement())
  name       String   @unique @map("nombre") @db.VarChar(128)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("sub_carpeta")
}

model Type {
  id         Int      @id @default(autoincrement())
  name       String   @map("nombre") @db.VarChar(64)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("tipo")
}

model Activity {
  id         Int      @id @default(autoincrement())
  name       String   @map("nombre") @db.VarChar(64)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("actividad")
}

model Clasification {
  id         Int      @id @default(autoincrement())
  name       String   @map("nombre") @db.VarChar(64)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("clasificacion")
}

model ResponsibleUnit {
  id         Int      @id @default(autoincrement())
  name       String   @map("nombre") @db.VarChar(64)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("unidad_responsable")
}

model GroupedState {
  id         Int      @id @default(autoincrement())
  name       String   @unique @map("nombre") @db.VarChar(128)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("estado_agrupado")
}

model City {
  id        Int        @id @default(autoincrement())
  name      String     @unique @map("nombre") @db.VarChar(30)
  provinces Province[]

  @@map("departamento")
}

model Province {
  id            Int            @id @default(autoincrement())
  name          String         @unique @map("nombre") @db.VarChar(30)
  cityId        Int            @map("departamento_id")
  municipalitys Municipality[]
  city          City           @relation(fields: [cityId], references: [id])

  @@index([cityId], map: "provincia_departamento_id_fkey")
  @@map("provincia")
}

model Municipality {
  id         Int      @id @default(autoincrement())
  name       String   @unique @map("nombre") @db.VarChar(30)
  provinceId Int
  province   Province @relation(fields: [provinceId], references: [id])

  @@index([provinceId], map: "municipio_provinceId_fkey")
  @@map("municipio")
}

model Technical {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(128)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("tecnico")
}

model Legal {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(128)
  propertyId Int      @unique
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("juridico")
}

model localization {
  id              Int      @id @default(autoincrement())
  departamento_id Int      @unique(map: "Localization_departamento_id_key")
  provincia_id    Int      @unique(map: "Localization_provincia_id_key")
  municipio_id    Int      @unique(map: "Localization_municipio_id_key")
  propertyId      Int      @unique(map: "Localization_propertyId_key")
  predio          Property @relation(fields: [propertyId], references: [id], map: "Localization_propertyId_fkey")
}
